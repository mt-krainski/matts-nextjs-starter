name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.set-cache-key.outputs.key }}

    steps:
      - uses: actions/checkout@v4

      - name: Set cache key
        id: set-cache-key
        run: echo "key=package-lock.json.${{ hashFiles('package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ steps.set-cache-key.outputs.key }}

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci

  lint:
    name: Lint
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore dependencies from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.install-dependencies.outputs.cache-key }}

      - name: Lint
        run: |
          npm run lint

  build:
    name: Build
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore dependencies from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.install-dependencies.outputs.cache-key }}

      - name: Try build
        run: |
          npm run build

  test:
    name: Unit and ComponentTests
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore dependencies from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.install-dependencies.outputs.cache-key }}

      - name: Test
        run: |
          npm run test

  e2e:
    name: End to End Tests
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore dependencies from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.install-dependencies.outputs.cache-key }}

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - run: |
          supabase start --debug
          sleep 10
          npx supabase status --output env > .env.local
          cat .env.local
          source .env.local
          echo "NEXT_PUBLIC_SUPABASE_URL=$API_URL" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=$ANON_KEY" >> $GITHUB_ENV
          echo "SUPABASE_URL=$API_URL" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_ROLE_KEY=$SERVICE_ROLE_KEY" >> $GITHUB_ENV
          echo "SUPABASE_INBUCKET_URL=$INBUCKET_URL" >> $GITHUB_ENV

      - name: Install Playwright dependencies
        run: |
          npx playwright install --with-deps

      - name: Run e2e tests
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ env.NEXT_PUBLIC_SUPABASE_URL}}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ env.NEXT_PUBLIC_SUPABASE_ANON_KEY}}
          SUPABASE_URL: ${{ env.SUPABASE_URL}}
          SUPABASE_SERVICE_ROLE_KEY: ${{ env.SUPABASE_SERVICE_ROLE_KEY}}
          SUPABASE_INBUCKET_URL: ${{ env.SUPABASE_INBUCKET_URL}}
          NEXT_PUBLIC_COMPANY_NAME: Test Company
        run: |
          npm run test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ github.run_id }}
          path: playwright-report/
          retention-days: 30
